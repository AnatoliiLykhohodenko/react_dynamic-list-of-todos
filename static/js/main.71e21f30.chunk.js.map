{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todo","setTodo","className","map","someTodo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","setFilterBy","onChange","event","target","value","toLocaleLowerCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","someUser","href","email","name","App","filterBy","setTodos","someTodos","finally","preparedTodos","useMemo","lowerCaseQuery","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71e21f30.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  todo: Todo,\n  setTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, todo, setTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>Title</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(someTodo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            { 'has-background-info-light': someTodo === todo },\n          )}\n          key={someTodo.id}\n        >\n          <td className=\"is-vcentered\">{someTodo.id}</td>\n          <td className=\"is-vcentered\">\n            {someTodo.completed && <i className=\"fas fa-check\" />}\n          </td>\n          <td className=\"is-vcentered\">\n            <p className={classNames({\n              'has-text-danger': !someTodo.completed,\n              'has-text-success': someTodo.completed,\n            })}\n            >\n              {someTodo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setTodo(someTodo)}\n            >\n              <span className=\"icon\">\n                {someTodo === todo\n                  ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  setFilterBy: (filterBy: FilterBy) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            setFilterBy(event.target.value.toLocaleLowerCase() as FilterBy);\n          }}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setTodo: (todo: Todo) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [user, setUser] = useState({} as User);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId).then(someUser => {\n      setUser(someUser);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo({} as Todo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  // const todoByDefault: Todo = {\n  //   userId: 0,\n  //   id: 0,\n  //   title: '',\n  //   completed: false,\n  // };\n\n  const [todo, setTodo] = useState({} as Todo);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<FilterBy>('all');\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(someTodos => {\n        setTodos(someTodos);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  let preparedTodos = [...todos];\n\n  useMemo(() => {\n    const lowerCaseQuery = query.toLocaleLowerCase();\n\n    if (query) {\n      preparedTodos = preparedTodos.filter(\n        someTodo => someTodo.title.toLowerCase().includes(lowerCaseQuery),\n      );\n    }\n\n    switch (filterBy) {\n      case 'active':\n        preparedTodos = preparedTodos.filter(someTodo => !someTodo.completed);\n        break;\n\n      case 'completed':\n        preparedTodos = preparedTodos.filter(someTodo => someTodo.completed);\n        break;\n\n      default:\n        preparedTodos = [...preparedTodos];\n    }\n  }, [query, filterBy, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Title</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todo={todo}\n                    setTodo={setTodo}\n                    todos={preparedTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo.id && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}