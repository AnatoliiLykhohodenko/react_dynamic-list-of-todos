{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","allTodos","TodoList","setTodo","query","filterBy","setLoading","useState","todos","setTodos","useEffect","someTodos","useMemo","filter","todo","title","includes","completed","className","map","id","classNames","type","onClick","TodoFilter","setQuery","setFilterBy","onChange","event","target","value","toLocaleLowerCase","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","loading","userId","someUser","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f64ce83.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  setTodo: (id: Todo) => void,\n  query: string,\n  filterBy: FilterBy,\n  setLoading: (loading: boolean) => void;\n};\n\nlet allTodos: Todo[] = [];\n\nexport const TodoList: React.FC<Props> = ({\n  setTodo,\n  query,\n  filterBy,\n  setLoading,\n}) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(someTodos => {\n        allTodos = someTodos;\n        setTodos(someTodos);\n        setLoading(false);\n      });\n  }, []);\n\n  useMemo(() => {\n    if (query) {\n      if (filterBy === 'all') {\n        setTodos(allTodos.filter(todo => todo.title.includes(query)));\n      }\n\n      if (filterBy === 'active') {\n        setTodos(allTodos.filter(todo => todo.title.includes(query) && !todo.completed));\n      }\n\n      if (filterBy === 'completed') {\n        setTodos(allTodos.filter(todo => todo.title.includes(query) && todo.completed));\n      }\n    }\n\n    if (!query) {\n      if (filterBy === 'all') {\n        setTodos(allTodos);\n      }\n\n      if (filterBy === 'active') {\n        setTodos(allTodos.filter(todo => !todo.completed));\n      }\n\n      if (filterBy === 'completed') {\n        setTodos(allTodos.filter(todo => todo.completed));\n      }\n    }\n  }, [query, filterBy]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && <i className=\"fas fa-check\" />}\n            </td>\n            <td className=\"is-vcentered\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ntype Props = {\n  query: string,\n  setQuery: (query: string) => void,\n  setFilterBy: (filterBy: FilterBy) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilterBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            setFilterBy(event.target.value.toLocaleLowerCase() as FilterBy);\n          }}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        <button\n          data-cy=\"clearSearchButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setQuery('')}\n        />\n      </span>\n    </p>\n  </form>\n);\n\n// export const TodoFilter = () => {\n//   return (\n//     <form className=\"field has-addons\">\n//       <p className=\"control\">\n//         <span className=\"select\">\n//           <select data-cy=\"statusSelect\">\n//             <option value=\"all\">All</option>\n//             <option value=\"active\">Active</option>\n//             <option value=\"completed\">Completed</option>\n//           </select>\n//         </span>\n//       </p>\n\n//       <p className=\"control is-expanded has-icons-left has-icons-right\">\n//         <input\n//           data-cy=\"searchInput\"\n//           type=\"text\"\n//           className=\"input\"\n//           placeholder=\"Search...\"\n//         />\n//         <span className=\"icon is-left\">\n//           <i className=\"fas fa-magnifying-glass\" />\n//         </span>\n\n//         <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n//           {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n//           <button\n//             data-cy=\"clearSearchButton\"\n//             type=\"button\"\n//             className=\"delete\"\n//           />\n//         </span>\n//       </p>\n//     </form>\n//   );\n// };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  setTodo: (todo: Todo) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setTodo }) => {\n  const [user, setUser] = useState({} as User);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId).then(someUser => {\n      setUser(someUser);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo({} as Todo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const todoByDefault: Todo = {\n    userId: 0,\n    id: 0,\n    title: '',\n    completed: false,\n  };\n\n  const [todo, setTodo] = useState(todoByDefault);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState<FilterBy>('all');\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Title</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilterBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                setTodo={setTodo}\n                query={query}\n                filterBy={filterBy}\n                setLoading={setLoading}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo.id && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}